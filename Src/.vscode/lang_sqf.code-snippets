{
	// Place your Рабочая область Root snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"docheader": {
		"prefix": "docheader",
		"scope": "sqf",
		"body": [
			"// ======================================================",
			"// Copyright (c) 2017-$CURRENT_YEAR the ReSDK_A3 project",
			"// sdk.relicta.ru",
			"// ======================================================",
			""
		]
	},

	"getv" : {
		"prefix": "getv",
		"body": [
			"getv(${1:name})${0}"
		],
		"scope": "sqf",
		"description": "Get struct variable"
	},
	"setv" : {
		"prefix": "setv",
		"body": "setv(${1:name},${2:value})${0}",
		"scope": "sqf",
		"description": "Set struct variable value"
	},
	"callv": {
		"prefix": "callv",
		"body": ["callv(${1:funcName})${0}"],
		"scope": "sqf",
		"description": "Call struct function without parameters"
	},
	"callp": {
		"prefix": "callp",
		"body": ["callp(${1:funcName},${2:args})${0}"],
		"scope": "sqf",
		"description": "Call struct function with params. Params can separated with delimeter 'arg'"
	},

	"calls": {
		"prefix": "calls",
		"scope": "sqf",
		"body": [
			"callSelf(${1:member})"
		]
	},
	"callsp": {
		"prefix": "callsp",
		"scope": "sqf",
		"body": [
			"callSelfParams(${1:member},${2:params})"
		]
	},
	"callf": {
		"prefix": "callf",
		"scope": "sqf",
		"body": [
			"callFunc(${1:object},${2:member})"
		]
	},
	"callfp": {
		"prefix": "callfp",
		"scope": "sqf",
		"body": [
			"callFuncParams(${1:object},${2:member},${3:params})"
		]
	},
	"for": {
		"prefix": "for",
		"scope": "sqf",
		"body": [
			"for \"_${1:loopVariable}\" from ${2:fromValue} to ${3:toValue} do {",
			"\t$0",
			"};"
		],
		"description": "цикл for"
	},
	"while": {
		"prefix": "while",
		"scope": "sqf",
		"body": [
			"while { ${1:condition} } do {",
			"\t$0",
			"};"
		],
		"description": "цикл while"
	}
}